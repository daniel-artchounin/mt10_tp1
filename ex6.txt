TestSuite est une classe pour réaliser des tests sur des objets Sage. Par défaut, si rien est affiché, cela signifie que tous les tests ont été passés avec succès. 

Son fonctionnement n'est pas complexe. Elle dispose notamment d'un constructeur et d'une méthode run(). Le constructeur prend en paramètre l'objet sur lequel il faut effectuer les tests. Il a pour but de créer un attribut référençant l'objet sur lequel doivent être effectués tous les tests. La méthode run() permet d'exécuter les tests sur l'objet passé au constructeur. En fait, la méthode run() se charge principalement d'appeler dans l'ordre alphabétique toutes les méthodes de l'objet commençant par "_test_". Pour connaître ces dernières, la méthode run() a recours à l'introspection via la fonction "built-in" dir() de Python permettant notamment de connaître les méthodes et les attributs d'un objet. Grâce à la fonction "built-in" getattr() de Python, run() peut récupérer des références vers les méthodes effectuant les tests, et, à terme, les appeler. Ces méthodes sont généralement implémentées dans des classes abstraites mères de l'objet passé au constructeur de TestSuite. Si des tests ont échoué, la méthode run() se charge également de les afficher.

TestSuite a principalement pour vocation d'être une interface commune pour la réalisation de tests sur l'ensemble des objets Sage malgré la spécificité de ces derniers. A titre d'exemple, si l'objet passé au constructeur de TestSuite est une instance de la classe des groupes, un test va vérifier si la loi du groupe est associative (au moins sur quelques éléments). Evidemment, ce test peut également être exécuté indépendamment. A titre d'exemple, on peut directement (sans utiliser TestSuite) appeler la méthode _test_associativity() de l'objet passé en paramètre pour vérifier si sa loi est associative. 